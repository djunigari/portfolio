generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Employer{
  id String @id @default(uuid())
  language String @default("en")
  name String
  position String
  description String
  site String?
  logoImageUrl String?
  startAt DateTime 
  endAt DateTime?
  isItJob Boolean @default(true)
  tecnologies TecnologiesOnEmployer[]
}

model Project{
  id String @id @default(uuid())
  language String @default("en")
  name String 
  description String
  url String?
  gitHubUrl String?
  tecnologies TecnologiesOnProjects[]
}

model Tecnology{
  id String @id @default(uuid())
  name String
  iconUrl String
  projects TecnologiesOnProjects[]
  employer TecnologiesOnEmployer[]
}

model TecnologiesOnEmployer {
  tecnology       Tecnology     @relation(fields: [tecnologyId], references: [id])
  tecnologyId     String 

  employer   Employer @relation(fields: [employerId], references: [id])
  employerId String 
  @@id([tecnologyId, employerId])
}

model TecnologiesOnProjects {
  tecnology       Tecnology     @relation(fields: [tecnologyId], references: [id])
  tecnologyId     String 

  project   Project @relation(fields: [projectId], references: [id])
  projectId String 
  @@id([tecnologyId, projectId])
}

model Education {
  id String @id @default(uuid())
  name String
  site String?
  logoImageUrl String?
  degree String
  field String?
  startAt DateTime
  endAt DateTime?
}

model Academy{
 id String @id @default(uuid()) 
 name String
 courses Course[]
}

model Course{
  id String @id @default(uuid())
  name String
  academyId String
  academy Academy @relation(fields: [academyId], references: [id])
}